{
  "paragraphs": [
    {
      "text": "import com.datastax.spark.connector._",
      "user": "anonymous",
      "dateUpdated": "2019-04-13 22:22:31.622",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import com.datastax.spark.connector._\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1555194046369_1775455319",
      "id": "20190413-222046_1940081205",
      "dateCreated": "2019-04-13 22:20:46.370",
      "dateStarted": "2019-04-13 22:22:31.721",
      "dateFinished": "2019-04-13 22:23:00.610",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": " case class Car(model: String)",
      "user": "anonymous",
      "dateUpdated": "2019-04-24 05:59:50.773",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "java.lang.NoSuchMethodError: scala.reflect.internal.Definitions$definitions$.classExistentialType(Lscala/reflect/internal/Symbols$Symbol;)Lscala/reflect/internal/Types$Type;\n\tat scala.tools.nsc.typechecker.SyntheticMethods$$anonfun$canEqualMethod$1$1.apply(SyntheticMethods.scala:147)\n\tat scala.tools.nsc.typechecker.SyntheticMethods$$anonfun$canEqualMethod$1$1.apply(SyntheticMethods.scala:146)\n\tat scala.tools.nsc.typechecker.MethodSynthesis$ClassMethodSynthesis.finishMethod(MethodSynthesis.scala:58)\n\tat scala.tools.nsc.typechecker.MethodSynthesis$ClassMethodSynthesis.createInternal(MethodSynthesis.scala:69)\n\tat scala.tools.nsc.typechecker.MethodSynthesis$ClassMethodSynthesis.createMethod(MethodSynthesis.scala:83)\n\tat scala.tools.nsc.typechecker.SyntheticMethods$class.canEqualMethod$1(SyntheticMethods.scala:146)\n\tat scala.tools.nsc.typechecker.SyntheticMethods$$anonfun$productMethods$1$5.apply(SyntheticMethods.scala:251)\n\tat scala.tools.nsc.typechecker.SyntheticMethods$$anonfun$productMethods$1$5.apply(SyntheticMethods.scala:251)\n\tat scala.tools.nsc.typechecker.SyntheticMethods$$anonfun$impls$1$3.apply(SyntheticMethods.scala:355)\n\tat scala.tools.nsc.typechecker.SyntheticMethods$$anonfun$impls$1$3.apply(SyntheticMethods.scala:355)\n\tat scala.collection.TraversableLike$WithFilter$$anonfun$map$2.apply(TraversableLike.scala:683)\n\tat scala.collection.immutable.List.foreach(List.scala:392)\n\tat scala.collection.TraversableLike$WithFilter.map(TraversableLike.scala:682)\n\tat scala.tools.nsc.typechecker.SyntheticMethods$class.impls$1(SyntheticMethods.scala:355)\n\tat scala.tools.nsc.typechecker.SyntheticMethods$class.synthesize$1(SyntheticMethods.scala:368)\n\tat scala.tools.nsc.typechecker.SyntheticMethods$class.caseTemplateBody$1(SyntheticMethods.scala:396)\n\tat scala.tools.nsc.typechecker.SyntheticMethods$$anonfun$addSyntheticMethods$2.apply(SyntheticMethods.scala:400)\n\tat scala.tools.nsc.typechecker.SyntheticMethods$$anonfun$addSyntheticMethods$2.apply(SyntheticMethods.scala:399)\n\tat scala.reflect.internal.Trees$class.deriveTemplate(Trees.scala:1822)\n\tat scala.reflect.internal.SymbolTable.deriveTemplate(SymbolTable.scala:16)\n\tat scala.tools.nsc.typechecker.SyntheticMethods$class.addSyntheticMethods(SyntheticMethods.scala:399)\n\tat scala.tools.nsc.interpreter.ReplGlobal$$anon$1.addSyntheticMethods(ReplGlobal.scala:23)\n\tat scala.tools.nsc.typechecker.Typers$Typer.finishMethodSynthesis(Typers.scala:1837)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedClassDef(Typers.scala:1763)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5309)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5359)\n\tat scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)\n\tat scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)\n\tat scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)\n\tat scala.tools.nsc.interpreter.ReplGlobal$$anon$1$$anon$2.typed(ReplGlobal.scala:36)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)\n\tat scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)\n\tat scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)\n\tat scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)\n\tat scala.collection.immutable.List.loop$1(List.scala:176)\n\tat scala.collection.immutable.List.mapConserve(List.scala:200)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedTemplate(Typers.scala:1921)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedClassDef(Typers.scala:1762)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5309)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5359)\n\tat scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)\n\tat scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)\n\tat scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)\n\tat scala.tools.nsc.interpreter.ReplGlobal$$anon$1$$anon$2.typed(ReplGlobal.scala:36)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)\n\tat scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)\n\tat scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)\n\tat scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)\n\tat scala.collection.immutable.List.loop$1(List.scala:176)\n\tat scala.collection.immutable.List.mapConserve(List.scala:200)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedTemplate(Typers.scala:1921)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedClassDef(Typers.scala:1762)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5309)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5359)\n\tat scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)\n\tat scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)\n\tat scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)\n\tat scala.tools.nsc.interpreter.ReplGlobal$$anon$1$$anon$2.typed(ReplGlobal.scala:36)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)\n\tat scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)\n\tat scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)\n\tat scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)\n\tat scala.collection.immutable.List.loop$1(List.scala:176)\n\tat scala.collection.immutable.List.mapConserve(List.scala:200)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedTemplate(Typers.scala:1921)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedClassDef(Typers.scala:1762)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5309)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5359)\n\tat scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)\n\tat scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)\n\tat scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)\n\tat scala.tools.nsc.interpreter.ReplGlobal$$anon$1$$anon$2.typed(ReplGlobal.scala:36)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)\n\tat scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)\n\tat scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)\n\tat scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)\n\tat scala.collection.immutable.List.loop$1(List.scala:176)\n\tat scala.collection.immutable.List.mapConserve(List.scala:200)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedPackageDef$1(Typers.scala:5015)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5312)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5359)\n\tat scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)\n\tat scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)\n\tat scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)\n\tat scala.tools.nsc.interpreter.ReplGlobal$$anon$1$$anon$2.typed(ReplGlobal.scala:36)\n\tat scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5448)\n\tat scala.tools.nsc.typechecker.Analyzer$typerFactory$$anon$3.apply(Analyzer.scala:102)\n\tat scala.tools.nsc.Global$GlobalPhase$$anonfun$applyPhase$1.apply$mcV$sp(Global.scala:440)\n\tat scala.tools.nsc.Global$GlobalPhase.withCurrentUnit(Global.scala:431)\n\tat scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:440)\n\tat scala.tools.nsc.typechecker.Analyzer$typerFactory$$anon$3$$anonfun$run$1.apply(Analyzer.scala:94)\n\tat scala.tools.nsc.typechecker.Analyzer$typerFactory$$anon$3$$anonfun$run$1.apply(Analyzer.scala:93)\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:891)\n\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1334)\n\tat scala.tools.nsc.typechecker.Analyzer$typerFactory$$anon$3.run(Analyzer.scala:93)\n\tat scala.tools.nsc.Global$Run.compileUnitsInternal(Global.scala:1501)\n\tat scala.tools.nsc.Global$Run.compileUnits(Global.scala:1486)\n\tat scala.tools.nsc.Global$Run.compileSources(Global.scala:1481)\n\tat scala.tools.nsc.interpreter.IMain.compileSourcesKeepingRun(IMain.scala:435)\n\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.compileAndSaveRun(IMain.scala:855)\n\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.compile(IMain.scala:813)\n\tat scala.tools.nsc.interpreter.IMain$Request.compile$lzycompute(IMain.scala:1002)\n\tat scala.tools.nsc.interpreter.IMain$Request.compile(IMain.scala:997)\n\tat scala.tools.nsc.interpreter.IMain.compile(IMain.scala:579)\n\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:567)\n\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:565)\n\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:107)\n\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:96)\n\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:90)\n\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\n\tat scala.Console$.withOut(Console.scala:65)\n\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:90)\n\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:121)\n\tat org.apache.zeppelin.spark.NewSparkInterpreter.interpret(NewSparkInterpreter.java:147)\n\tat org.apache.zeppelin.spark.SparkInterpreter.interpret(SparkInterpreter.java:73)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:103)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:632)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.FIFOScheduler$1.run(FIFOScheduler.java:140)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1555194151630_-53056420",
      "id": "20190413-222231_821266691",
      "dateCreated": "2019-04-13 22:22:31.630",
      "dateStarted": "2019-04-24 05:59:50.819",
      "dateFinished": "2019-04-24 06:00:15.743",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "anonymous",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1556085590774_1613266317",
      "id": "20190424-055950_1181959740",
      "dateCreated": "2019-04-24 05:59:50.774",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "spark-cassandra",
  "id": "2E8UM231K",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "spark-cassandra::2E8UM231K": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}